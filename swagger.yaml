openapi: 3.0.3
info:
  title: Simple Library REST API
  description: API documentation for Simple Library REST application
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
paths:
  /users:
    get:
      summary: Get All Users
      tags:
        - users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/add:
    post:
      summary: Create User
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Get User by ID
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete User
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User deleted successfully
  /users/update:
    patch:
      summary: Update User
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/take:
    post:
      summary: Take Book to User
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBook'
      responses:
        '200':
          description: Book taken successfully
  /users/return:
    post:
      summary: Return Book from User
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBook'
      responses:
        '200':
          description: Book returned successfully
  /books:
    get:
      summary: Get All Books
      tags:
        - books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /books/add:
    post:
      summary: Create Book
      tags:
        - books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /books/{id}:
    get:
      summary: Get Book by ID
      tags:
        - books
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    delete:
      summary: Delete Book
      tags:
        - books
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Book deleted successfully
  /books/update:
    patch:
      summary: Update Book
      tags:
        - books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: Alex
        email:
          type: string
          example: alex@gmail.com
        password:
          type: string
          example: $2a$14$7YrFqsdasdasdaQ.j3tQDMO.YchXLBzZwEEXECC./Xyx6IzjIzYjGQG
        role:
          type: string
          example: user
        books:
          type: array
          items:
            $ref: '#/components/schemas/Book'

    Book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
          example: Russian dictionary
        author:
          type: string
          example: Lev Tolstoy
        available:
          type: boolean
    UserBook:
      type: object
      properties:
        userId:
          type: integer
        bookId:
          type: integer
